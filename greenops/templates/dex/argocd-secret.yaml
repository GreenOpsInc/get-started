apiVersion: v1
kind: Secret
metadata:
  name: argocd-secret
  namespace: {{ .Values.common.namespace }}
  labels:
    {{- include "dex.labels" (dict "context" . "component" .Values.dex.name "name" "argocd-secret") | nindent 4 }}
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Values.common.namespace "argocd-secret") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $argocdSecret := (get $secretData "server.secretkey") | default (randAlphaNum 32 | b64enc) }}
  server.secretkey: {{ $argocdSecret | quote }}
