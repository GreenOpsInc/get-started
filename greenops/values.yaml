common:
  namespace: greenops
  orgName: org
  argoCdUrl: ""
  licenseKey: ""
  dbAddress: ""
  usePersistentVolume: false
  imagePullSecret: regcred
  imageCredentials:
    registry: "https://index.docker.io/v1/"
    username: ""
    password: ""
    email: ""

server:
  name: greenops-server
  externalUrl: ""
  image: docker.io/greenopsinc/goserver:v0.10.0-b7
  replicas: 1
  imagePullPolicy: IfNotPresent
  restartPolicy: Always
  nodePort: 30007
  port: 8080
#   sso:
#     secretName: greenops-sso
#     clientId: ""
#     clientSecret: ""

controller:
  name: greenops-controller
  image: docker.io/greenopsinc/controller:v0.10.0-b7
  replicas: 1
  imagePullPolicy: IfNotPresent
  restartPolicy: Always
  metrics:
    bindAddress: localhost:8082
    healthProbeBindAddress: localhost:8083

pipelineRepoServer:
  name: greenops-reposerver
  image: docker.io/greenopsinc/pipelinereposerver:v0.10.0-b7
  nodePort: 32522
  port: 8080
  replicas: 1
  imagePullPolicy: IfNotPresent
  restartPolicy: Always

commandDelegator:
  name: greenops-commanddelegator
  image: docker.io/greenopsinc/commanddelegator:v0.10.0-b7
  nodePort: 32533
  port: 8080
  replicas: 1
  imagePullPolicy: IfNotPresent
  restartPolicy: Always

metricsServer:
  name: greenops-metrics-server
  image: docker.io/greenopsinc/greenops-metrics-server:v0.10.0-b7
  nodePort: 32544
  port: 2112
  replicas: 1
  imagePullPolicy: IfNotPresent
  restartPolicy: Always

redis:
  name: redisserver
  image: redis
  port: 6379
  replicas: 1
  imagePullPolicy: IfNotPresent
  restartPolicy: Always
  volume:
    name: redis-storage
    persistentVolume:
      name: redis-pv
      labels:
        topology.kubernetes.io/region: ""
        topology.kubernetes.io/zone: ""
        type: ""
      gcePersistentDisk:
        pdName: ""
        fsType: ""
    persistentVolumeClaim:
      name: redis.pvc
